package org.gitor.kettledemo.kettledemo;import org.pentaho.di.core.KettleEnvironment;import org.pentaho.di.core.database.DatabaseMeta;import org.pentaho.di.core.exception.KettleException;import org.pentaho.di.core.logging.LogLevel;import org.pentaho.di.job.Job;import org.pentaho.di.job.JobMeta;import org.pentaho.di.repository.*;import org.pentaho.di.repository.kdr.KettleDatabaseRepository;import org.pentaho.di.repository.kdr.KettleDatabaseRepositoryMeta;/** * @author : liuwenlong * @date : 2018/12/13 16:21 */public class KettleDemo {    public static void main(String[] args)  throws Exception{        KettleEnvironment.init();        //数据库连接元对象        DatabaseMeta dataMeta = new DatabaseMeta("kettle", "MYSQL", "Native", "localhost", "hp_wenxue", "3306", "root", "1");        //资源库元对象        KettleDatabaseRepositoryMeta repInfo = new KettleDatabaseRepositoryMeta();        repInfo.setConnection(dataMeta);        //资源库        KettleDatabaseRepository repository = new KettleDatabaseRepository();        repository.init(repInfo);        repository.connect("admin", "admin");        RepositoryDirectoryInterface directory = repository.loadRepositoryDirectoryTree();        //directory = directory.findDirectory("/Users/liuwenlong/Documents");//        TransMeta transMeta = repository.loadTransformation("Untitled.ktr", directory, null, true, "1.0");//        Trans trans = new Trans(transMeta);//        trans.execute(null);//        trans.waitUntilFinished();        JobMeta jobMeta = repository.loadJob("job1", directory, null, null);        Job job = new Job(repository, jobMeta);        job.setDaemon(true);        job.setLogLevel(LogLevel.DEBUG);        job.run();        job.waitUntilFinished();        //jobTest();    }    public static void jobTest(){        try{            KettleEnvironment.init();            JobMeta jm = new JobMeta("/Users/liuwenlong/Documents/insert-demo.ktr",null);            Job job = new Job(null,jm);            job.setVariable("dateNow", "2016-01-05");            job.start();            job.waitUntilFinished();        }catch (KettleException e){            e.printStackTrace();        }    }}